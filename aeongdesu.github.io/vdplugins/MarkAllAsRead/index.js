(function(o,n,c,l,u,f){"use strict";const s=n.findByProps("sendBotMessage"),h=n.findByStoreName("GuildStore"),p=n.findByStoreName("GuildChannelStore"),d=n.findByStoreName("ReadStateStore"),{post:y}=n.findByProps("setRequestPatch").default,{Endpoints:g}=n.findByProps("Endpoints"),B=n.findByStoreName("UserGuildSettingsStore"),v=c.registerCommand({name:"markallasread",displayName:"markallasread",description:"read all server notifications",displayDescription:"read all server notifications",options:[],applicationId:"",inputType:1,type:1,execute:async function(m,i){try{const t=[];Object.values(h.getGuilds()).forEach(function(e){B.isMuted(e.id)||p.getChannels(e.id).SELECTABLE.forEach(function(a){d.hasUnread(a.channel.id)&&t.push({channel_id:a.channel.id,message_id:d.lastMessageId(a.channel.id)})})});const r=async function(e){return await y({url:g.BULK_ACK,body:{read_states:e}})};if(t.length<100)return await r(t),s.sendBotMessage(i.channel.id,"Done!");{s.sendBotMessage(i.channel.id,"job queued, please do not switch accounts for now.");let e=0;const a=setInterval(async function(){if(await r(t.slice(e,e+100)),e+=100,e>=t.length)return clearInterval(a),u.showToast("Read all server notifications!",f.getAssetIDByName("check"))},Math.floor(Math.random()*2e3)+3e3)}}catch(t){return l.logger.error(t),s.sendBotMessage(i.channel.id,"Failed to read all server notifications")}}}),S=function(){return v()};return o.onUnload=S,o})({},vendetta.metro,vendetta.commands,vendetta,vendetta.ui.toasts,vendetta.ui.assets);
