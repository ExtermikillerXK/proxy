(function(g,v,p,R,r,a,w,k,V,M){"use strict";const O="",W={DETAILED:"detailed"},$={SEMICOL:", ",NEW_LINE:`
`},i={ENABLED:"\u{1F7E2}",DISABLED:"\u{1F534}",SELECTED:"\u{1F536}",NOT_SELECTED:"\u{1F537}"},H="Nothing to see here, huh...",u={NAME:"detailed",DESCRIPTION:"Whether to send a list with detailed information."},c={NAME:"plugin-list",DISPLAY_NAME:"plugin list",DESCRIPTION:"Send your plugin list to the current channel"},E={NAME:"theme-list",DISPLAY_NAME:"theme list",DESCRIPTION:"Send your theme list to the current channel"},y="https://vd-plugins.github.io/proxy/actuallythesun.github.io/vendetta-plugins/SplitLargeMessages/",d={SLM_NOT_INSTALLED:`Your list is too long to send it! Please install the [Split Large Messages](${y}) plugin.`,SLM_NOT_ENABLED:`Your list is too long to send it! You have the Split Large Messages plugin installed, but it's not enabled!
> Please enable it in order to send the list.`},l={CONTENT:"Your list is over than 2000 characters. Are you sure?",CONFIRM:"Yes",CANCEL:"No"},q=p.findByProps("sendMessage","receiveMessage"),N=p.findByProps("sendBotMessage"),b=p.findByStoreName("UserStore").getCurrentUser()?.premiumType===2?4e3:2e3,B=function(e){return Object.keys(e).includes(y)},F=function(e){return Object.values(e).find(function(t){return t.id==y}).enabled},j=function(e){return e.find(function(t){return t.name===W.DETAILED})?.value??!1},L=function(e){return e.map(function(t){return t.name}).join($.SEMICOL)},Y=function(e){return e.join($.NEW_LINE).trimEnd()},S=function(e){return Y(e).length},T=async function(e,t){return await q.sendMessage(e,{content:Y(t)})},x=function(e,t){return[`**My ${e} List | ${t} ${e}s**`,O]};async function J(e,t){const C=j(e),_=a.storage.themeListAlwaysDetailed??!1,o=Object.values(R.themes),n=t.channel.id,s=x("Theme",Object.keys(R.themes).length);if(o.length)for(const A of o){const{selected:D,data:P,id:f}=A,{name:m,description:I,authors:U}=P;C||_?s.push(`> **Name**: ${m}`,`> **Selected**: ${D?i.SELECTED:i.NOT_SELECTED}`,`> **Description**: ${I}`,`> **Authors**: ${L(U)}`,`> **[Install!](${f})**`,O):s.push(`> ${D?i.SELECTED:i.NOT_SELECTED} **${m}** by ${L(U)}`)}else s.push(H);const h=S(s)>b;if(h&&!B(r.plugins))N.sendBotMessage(n,d.SLM_NOT_INSTALLED);else if(h&&!F(r.plugins))N.sendBotMessage(n,d.SLM_NOT_ENABLED);else{if(S(s)>2e3)return w.alerts.showConfirmationAlert({content:l.CONTENT,confirmText:l.CONFIRM,cancelText:l.CANCEL,onConfirm:async function(){return await T(n,s)}});await T(n,s)}}async function z(e,t){const C=j(e),_=a.storage.pluginListAlwaysDetailed??!1,o=t.channel.id,n=x("Plugin",Object.keys(r.plugins).length);for(const h of Object.values(r.plugins)){const{enabled:A,manifest:D,id:P}=h,{name:f,description:m,authors:I}=D;C||_?n.push(`> **Name**: ${f}`,`> **Status**: ${A?i.ENABLED:i.DISABLED}`,`> **Description**: ${m}`,`> **Authors**: ${L(I)}`,`> **[Install!](${P})**`,O):n.push(`> ${A?i.ENABLED:i.DISABLED} **${f}** by ${L(I)}`)}const s=S(n)>b;if(s&&!B(r.plugins))N.sendBotMessage(o,d.SLM_NOT_INSTALLED);else if(s&&!F(r.plugins))N.sendBotMessage(o,d.SLM_NOT_ENABLED);else{if(S(n)>2e3)return w.alerts.showConfirmationAlert({content:l.CONTENT,confirmText:l.CONFIRM,cancelText:l.CANCEL,onConfirm:async function(){return await T(o,n)}});await T(o,n)}}function K(){const e=[],t={options:[{name:u.NAME,displayName:u.NAME,description:u.DESCRIPTION,displayDescription:u.DESCRIPTION,type:5,required:!1}],inputType:1,type:1,applicationId:"-1"};return e.push(v.registerCommand({name:c.NAME,displayName:c.DISPLAY_NAME,description:c.DESCRIPTION,displayDescription:c.DESCRIPTION,execute:z,...t}),v.registerCommand({name:E.NAME,displayName:E.DISPLAY_NAME,description:E.DESCRIPTION,displayDescription:E.DESCRIPTION,execute:J,...t})),e}function Q(e){for(const t of e)t()}function X(){return V.useProxy(a.storage),React.createElement(M.ErrorBoundary,null,React.createElement(k.ReactNative.ScrollView,null,React.createElement(M.Forms.FormSwitchRow,{label:"Plugin List: Always send detailed list",onValueChange:function(e){return a.storage.pluginListAlwaysDetailed=e},value:a.storage.pluginListAlwaysDetailed}),React.createElement(M.Forms.FormSwitchRow,{label:"Theme List: Always send detailed list",onValueChange:function(e){return a.storage.themeListAlwaysDetailed=e},value:a.storage.themeListAlwaysDetailed})))}let G;var Z={onLoad:function(){G=K()},onUnload:function(){Q(G)},settings:X};return g.default=Z,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.commands,vendetta.metro,vendetta.themes,vendetta.plugins,vendetta.plugin,vendetta.ui,vendetta.metro.common,vendetta.storage,vendetta.ui.components);
